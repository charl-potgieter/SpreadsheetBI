VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "ZZZ_OUTDATEDStandardPivotReport"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
'Option Explicit
'
''-----------------------------------------------------------------------------------------
''
''   Class covers a standard pivot table that is supported by a value tab
''   Values tab is (?optionaly) generated by a DAX query that is then converted
''   to values
''
''-----------------------------------------------------------------------------------------
'
''*** Requires reference to Microsoft Scripting Runtime
'
''Use "This" declaration as an easy way to get intellisense to the classes private variables
''https://rubberduckvba.wordpress.com/2020/02/27/vba-classes-gateway-to-solid/
'Private Type TypeStandardPivotReport
'    wkb As Workbook
'    sht As Worksheet
'    pvt As PivotTable
'    QueryPath As String
'    shtData As Worksheet
'    loData As ListObject
'End Type
'
'Private This As TypeStandardPivotReport
'Private Const csTableName As String = "EmptyTable"
'
'
'Public Property Let DaxQueryFilePath(ByVal sPath As String)
'    This.QueryPath = sPath
'End Property
'
'
'Public Sub GenerateDataFromQuery(ByRef wkb As Workbook)
''Creates Dax Query and converts to values based on file stored in This.QueryPath
'
'    Dim sSheetName As String
'    Dim fso As FileSystemObject
'
'    'Create sheet with same name as DAX query
'    Set This.wkb = wkb
'    Set fso = New FileSystemObject
'    sSheetName = fso.GetBaseName(This.QueryPath)
'    On Error Resume Next
'    wkb.Sheets(sSheetName).Delete
'    On Error GoTo 0
'    Set This.sht = wkb.Sheets.Add
'    This.sht.Name = sSheetName
'    SPR_FormatSheet
'    CreateDummyPowerPivotTable
'    CreateDaxQueryListObject
'    SPR_FormatListObj
'    ConvertDaxQueryToValues
'
'End Sub
'
'
'Public Sub AddCalculatedTableColumn(ByVal sColName As String, ByVal sFormula As String)
'
'    Dim lc As ListColumn
'
'    Set lc = This.loData.ListColumns.Add
'    lc.Name = sColName
'    lc.DataBodyRange.Formula = sFormula
'    lc.DataBodyRange.Font.Color = RGB(0, 0, 0)
'
'End Sub
'
'

