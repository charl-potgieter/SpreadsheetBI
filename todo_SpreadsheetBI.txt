TODO
-------    
  - Continue to work on PowerReports.CreateFromStoredData (in class module)
  
  - Move the code in m070_PivotReports into the PowerReports class
 
   - Continue to work on EntryPoints.SavePivotReportMetadataInActiveWorkbook and at same time build out the PowerReport class and subclasses
  -> Continue work on m070_PivotReports.SavePowerReportCubeFieldProperties and 
  SavePowerReportPivotFieldProperties
  -> Dont use dictionaries  --> too many exceptions
  --> See old commented code for if branching which checks field types rather than relying on on
  error resume next


     - Maybe will simplify things if I got rid of properties under cubefields and pivotfields as there 
      arent that many to deal with and there are a lot of exceptions to general rules
  
   - Looks as if I need to seperately get cubefield and pivotfield properties.  For examlpe the pivotfield property is set in the pivotfield object while adding is set in the cubefield object
    * I am going to somehow have to get pivotfield name for corresponding pivotcolumname = seems to be simply pvt.cubefield.pivotfields(1)

  
   -  leading towards setting filters in DAX via measures rather than in pivot table.  Harder to manage the list of values in the pivot table

   - When setting properties if property is blank don't set as it means it wasnt saved (most likely not
   relevant to e.g. field orientation and should not be applied)
 
 -  Continue working on m006_DataAccess to save ReportMetaData

  - Store data in XML or JSON format? - No too much effort

 - Wondering if I should go back and re-evaluate auto report creation.  Won't necessarily complete each time a report is run but useful for recreating the entire spreadsheet.
    * Ideally I would also have code that read the pivot report settings into a worksheet.   Which could then be used to recreate the pivot reports
    * A lot of pivot reports can really slow down a workbook every time there is a refresh or change.  Generating on fly as needed may help this.
    * Populate the list headers with below  
       ActiveCell.Formula2R1C1 = "={""A"",""b"",""C""}"


 
 - Include DAX table queries when generating spreadsheet metadata

  - Remove TableLooper from SpreadsheetBI?   Process is better in seperate spreadsheet "Spreadsheet_Iterative_Model"
 
 - Power Query changing to quotestyleCSV seems to preserve line breaks if there are in quotes.  All fields need to be in quotes

   - The pipe delimited spreadsheet metadata DAX measures are not generating correctly when there are newlines in the measures
     Maybe best option is to remove newlines before writing to the text file
     The Human readable DAX measure file is fine
     The same issue occures in teh listobject metadata exports (both formulas and values) when there is an Alt-enter newline in the cell

How about writing to a workbook and saving as XML?


  - Create a readme
   
    - For each power query is it possible to save down whether it is loaded to the data model
 
   - Is it worthwhile considering list.accumulate in power query rather than a VBA solution
    * This will also allow easier to transition to power BI
  
- Work on the VBA or power query looper solution depending outcome of above

 
  
 
 - Create a flat pivot style (and apply when flatten pivot table macro is run)
 
  In the date table - is there an issue with using list.dates - see comment from Ken Puls here
  https://blog.crossjoin.co.uk/2016/06/03/creating-tables-in-power-bipower-query-m-code-using-table/
  

  
Website  / Twitter
------------------
- Set up Wordpress Blog website
  
 - Consider below theme, used by https://xxlbi.com/ as per code inspector
 https://wordpress.org/themes/twentysixteen/   maybe rather TwentyTwenty or something in between
  
- Tweet re Excel Book, Conditional Formatting, VBA approach