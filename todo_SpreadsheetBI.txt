TODO
------- 
Rebadge as XL Utilities and convert to an add in

Any reason I can't ahve headings on the index page rather than sheet names

Maybe just create a simple formula like below on each sheet to check if missing
on index tab (rather than linking to index error mechanism)
=IF(
    COUNTIFS(Index!D:D, Sheet2!ReturnToIndex)=1,
    "OK",
    "This sheet is not on index tab"
)

Create a shortcut key to navigate to and from the index page

There is still an old General/FormatSheet sub that is being called in other subs in SpreadsheetBI.  Rework these calling subs to use the ReportingSheet class and get rid of the FormatShet sub


How about hashing headings on each sheet with a formula and summing with 3d sum to compare to same on index page



Potential hash text formula
=SUM(CODE(MID(
    Heading,
    SEQUENCE(LEN(Heading)),
    1
))* 10 ^ ((SEQUENCE(LEN(Heading))-1)*3))


Workbooks with ReportSheets are slow - possible causes
 - ErrorChecks not equal to enrire columns
 - Border formatting

The CreateIndex sub is too big!   Split up

- update the error formula on index tab to start with an iferror test to 
  return false if there is an error - eg sheet is deleted

Ensuring completeness of error checks
  - should non-report sheets be allowed?
  -  check for duplicate heading names when index tab is generated and throw error?
  - create check that each sheet header appears on index
  - auto generate index on reportsheet create or format?


Should I consider protecting the reportingsheets?

Change index sheet to refer to sheet heading rather than tab name?




Consider hiding rather than grouping the reportingsheet error range.  Ther group outline symbols are a bit messy

Programmatically create a single query of records of data access queries

Keep the <CTRL><SHIFT><M> shortcut popup menu un this utilities add  in only.  Dont need these types of keyboard shortcuts in developer

Replace various subs with my standard VBA library from gitub
 - Note that some of the subs in SpreadsheetBI\General are now included in zLIB_SundryUtilities

Create code that pulls standard vba modules and class modules from github into the active workbook.
 - Use this in the Lamba Manager code especially ListStorage

Remove the VBA code import and Export from SpreadsheetBI - move to CodeManager add in

Add an additional menu items that runs looper and also adds (updates) the index page

Sharing and maintaining lambdas
 - below link can read txt from raw github files 
 https://www.devhut.net/2013/09/20/vba-read-a-file-from-a-webserver-or-internet-website/
 - Sheets in excel lambda creator file have cells containing lambdas, lambda categories and comments for name manager
 - Lambdas can be refreshed in target sheet with spreadsheetBI, maybe with a listbox of lambda selections so that all lambdas do not clutter up spreadsheet
 - Delimiting between comments and lambda is difficult - can I store a table in a readme somehow?  --> can I store in HTML table format in github
    https://www.w3schools.com/html/html_tables.asp
 - Maybe create an add-in with a combined roll of generator of table as well as refresher of defined names


Consider automating the creation of an error check tab
 - picks up error checks from individual sheets
 - Displays error message on each sheet

Any way I can refresh lambda functions in spreadsheet from github?

Revisit name manger - can filter by Lambda functions?

TableLooper should be ready for implementation - test out with PowerBI roll forward
It may be time for a restructure or the Roll forward
 - seperate data and reporting sheets



Lots of the below apply to the pivot report creation which is now sort of abandoned (maybe?) --> rather following approach of having different workbooks picking up shared power quwery text files
------------------------------------------------------------------------------------------


How about:
 - All pivots are excel based
 - All sources are dax queries in central file
- queries have text that can be replaced (acting as parameters)
- queries are stored in client workbook and copied to central workbook for refresh.  Data is then copied into client workbook


Reduce VBA adn get rid of userform - drive report creation from a worksheet?


Need an easier ways to produce boolean filter arrays, maybe some sort of replace function
 - Function that converts something like below
 <<Array>> = <MyText>


TableArray class --> move something like this into the column property get.  Note the zero in rowindex paramater
WorksheetFunction.Transpose(WorksheetFunction.Index(this.data, 0, 4))
--> tih successfully produces a one dimenstional array (rather than an n by 1 dimensional array)

Continue updating ReportingData.ReadUniqueSortedReportCategories


Sub testArrayMath()

Dim a, b, rv

 
 a = Array(True, True, True, True, True)
 b = Array(False, True, False, True, True)
 rv = Evaluate("{" & Join(a, ";") & "}*{" & Join(b, ";") & "}")

End Sub


Join does not work with variant arrays read from range as they have 2 dimensions although 2nd dimension is 1?
Does this help?
https://stackoverflow.com/questions/22766184/assign-1d-array-from-2d-array-in-vba/22769603



May be worth considering splitting out a "DataArray" class seperate to ListStorage.  The latter is used for raw storage only, while the former for in memory data table 


Can consider keeping the dataArray really simple  with just properties to return  table and headers item in col etc.  All lookups etc can simply be handled in main code body. 

Update the filter functionality of liststorage
 - create functionality to return entire table (filtered or not = default) as a variant
  - Don't create the filtered listobject until the filter function is called
  - Add an  optional paramarry to the filter function to specify which columns will be returned
   - Do I really need the filtered list of listobject to be represented on the grid or can it reside in memory.
   --> if I maintain in memory how can I perform functions such as xlookup?
    - If progressing with the above should I shift the entire workings of liststorage (including the unfiltered components) to in-memory?

This works!
          Sub TestVariantArray()

              Dim wkb As Workbook
              Dim rng As Range
              Dim v As Variant
              Dim colProperty As Variant
              Dim colValue As Variant
              Dim unq As Variant
              Dim rv As Variant
              
              Set wkb = Application.Workbooks("PivotReportExample.xlsm")
              Set rng = wkb.Sheets("ReportPRoperties").ListObjects("tbl_ReportProperties").DataBodyRange
              v = rng
              colProperty = rng.Columns(4)
              colValue = rng.Columns(5)
              
              rv = WorksheetFunction.Xlookup("Category", colProperty, colValue)

          End Sub



ufPivotReportGenerator.RefreshListBox --> how do I get the ReportType for each item to be displayed in ReportList - almost may need to add extra functionality to Listobject class
 - Below works to filter columns - why?
    * =FILTER(tbl_ReportProperties_Filtered, tbl_ReportProperties_Filtered[#Headers]="DataType")
    * Look at filter function definition
    * See step above


Add an All option in reports listbox so that all reports can be run for a specific category

Look at this (see also reference to Lambda editor)
https://techcommunity.microsoft.com/t5/excel/ways-of-performing-accumulation-with-dynamic-arrays/m-p/2329035

Read this
https://techcommunity.microsoft.com/t5/excel-blog/announcing-lambda-turn-excel-formulas-into-custom-functions/ba-p/1925546


Listobject class (and calling subs) --> need to protect against errors generated with null data including in transpose functions

 - Remove TableLooper from SpreadsheetBI?   Process is better in seperate spreadsheet "Spreadsheet_Iterative_Model"
 
 - Power Query changing to quotestyleCSV seems to preserve line breaks if there are in quotes.  All fields need to be in quotes

   - The pipe delimited spreadsheet metadata DAX measures are not generating correctly when there are newlines in the measures
     Maybe best option is to remove newlines before writing to the text file
     The Human readable DAX measure file is fine
     The same issue occures in teh listobject metadata exports (both formulas and values) when there is an Alt-enter newline in the cell

Look into the new-ish Excel data types (creatable via power query)
https://techcommunity.microsoft.com/t5/excel-blog/announcing-power-query-data-types/ba-p/1782903

Look into Lambda function when available --> Maybe move to insiders build


  - Create a readme
   
    - For each power query is it possible to save down whether it is loaded to the data model
   
 
  In the date table - is there an issue with using list.dates - see comment from Ken Puls here
  https://blog.crossjoin.co.uk/2016/06/03/creating-tables-in-power-bipower-query-m-code-using-table/
  

  
Website  / Twitter
------------------
- Set up Wordpress Blog website
  
 - Consider below theme, used by https://xxlbi.com/ as per code inspector
 https://wordpress.org/themes/twentysixteen/   maybe rather TwentyTwenty or something in between
 
 
 
 Resources to revisit
 -------------------
 
 * Excel meets Lambda (Andy Gordon)
 https://www.youtube.com/watch?v=7tFq-9Zvk3M&t=720s
  - Any news on Excel Lambda playground release - around 34 minutes
  - Also around 52 minutes re discussion on broader availability
   - Comments re adding to list for lambda playground
  
  